{"version":3,"sources":["components/Information.module.css","components/Information.jsx","components/InformationContainer.jsx"],"names":["module","exports","Information","props","className","s","block","title","info","name","src","image","alt","href","links","genesis_date","converter","p","symbol","type","input","onChange","e","etv","target","value","isFinite","substr","setCurrencyInput","currencyResult","currencyInput","currencyIR","select","setCurrencySelected","request","currencyConverter","map","u","index","selected","key","InformationContainer","onPageChanged","getCurrencyResult","match","params","id","this","currencySelected","getInformation","getCurrencyConverter","isFetching","preloader","information","currency","React","Component","compose","connect","state","getIsFetching","informationPage","requestInformation","requestResult","withRouter"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,4BAA4B,MAAQ,2BAA2B,UAAY,+BAA+B,EAAI,yB,mICqC3OC,EAnCK,SAACC,GAcjB,OACI,yBAAKC,UAAWC,IAAEC,OACd,uBAAGF,UAAWC,IAAEE,OAAQJ,EAAMK,KAAKC,MACnC,yBAAKC,IAAKP,EAAMK,KAAKG,MAAOC,IAAI,GAAGR,UAAWC,IAAEM,QAChD,6BAAK,uBAAGE,KAAMV,EAAMK,KAAKM,OAAQX,EAAMK,KAAKM,QAC5C,0GAAoBX,EAAMK,KAAKO,cAE/B,yBAAKX,UAAWC,IAAEW,WAAW,uBAAGZ,UAAWC,IAAEY,GAAId,EAAMK,KAAKU,QACxD,2BAAOC,KAAK,OAAOf,UAAWC,IAAEe,MAAOC,SApBtC,SAACC,GACV,IAAMC,EAAMD,EAAEE,OAAOC,MAChBC,SAASH,IAA2B,MAAnBA,EAAII,QAAQ,IAClCxB,EAAMyB,iBAAiBL,EAAKpB,EAAM0B,iBAiB+BJ,MAAOtB,EAAM2B,gBACtE,yBAAK1B,UAAWC,IAAEe,OAAQjB,EAAM4B,YAChC,4BAAQ3B,UAAWC,IAAE2B,OAAQX,SAhB5B,SAACC,GACV,IAAMC,EAAMD,EAAEE,OAAOC,MACrBtB,EAAM8B,oBAAoBV,GAC1BpB,EAAM+B,QAAQX,KAcDpB,EAAMgC,kBAAkBC,KAAI,SAACC,EAAGC,GAAJ,MACnB,QAAND,EAAc,4BAAQE,SAAS,WAAWC,IAAKF,GAAQD,GAAc,4BAAQG,IAAKF,GAAQD,U,wBCpB5GI,E,2MAUFC,cAAgB,SAACH,GACb,EAAKpC,MAAMwC,kBAAkB,EAAKxC,MAAMyC,MAAMC,OAAOC,GAAIP,EAAU,EAAKpC,MAAM2B,gB,mFAR9E,IAAIgB,EAAKC,KAAK5C,MAAMyC,MAAMC,OAAOC,GAC1BE,EAAoBD,KAAK5C,MAAzB6C,iBACPD,KAAK5C,MAAM8C,eAAeH,GAC1BC,KAAK5C,MAAM+C,uBACXH,KAAK5C,MAAMwC,kBAAkBG,EAAIE,EAAkBD,KAAK5C,MAAM2B,iB,+BAS9D,OAAOiB,KAAK5C,MAAMgD,WAAa,yBAAK/C,UAAWC,IAAE+C,WAAlB,oDACvB,kBAAC,EAAD,CACI5C,KAAMuC,KAAK5C,MAAMkD,YACRlB,kBAAmBY,KAAK5C,MAAMmD,SAC9BxB,cAAeiB,KAAK5C,MAAM2B,cAC1BF,iBAAkBmB,KAAK5C,MAAMyB,iBAC7BC,eAAgBkB,KAAK5C,MAAM0B,eAC3BI,oBAAqBc,KAAK5C,MAAM8B,oBAChCC,QAASa,KAAKL,cACXX,WAAYgB,KAAK5C,MAAM4B,iB,GAzBpBwB,IAAMC,WA0C1BC,sBACXC,aAbkB,SAACC,GACnB,MAAO,CACHN,YAAaJ,YAAeU,GAC5BR,WAAYS,YAAcD,GAC1BL,SAAUJ,YAAqBS,GAC/B7B,cAAe6B,EAAME,gBAAgB/B,cACrCC,WAAY4B,EAAME,gBAAgB9B,WAClCiB,iBAAkBW,EAAME,gBAAgBb,iBACxCnB,eAAgBc,YAAkBgB,MAKb,CACrBV,eAAgBa,IAChBZ,qBAAsBY,IACtBlC,qBACAK,wBACAU,kBAAmBoB,MANZN,CAONO,YAAWvB","file":"static/js/3.8f31624b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Information_preloader__1Jkdz\",\"block\":\"Information_block__2aCcj\",\"title\":\"Information_title__2a3-K\",\"select\":\"Information_select__d1IRG\",\"input\":\"Information_input__1tBC9\",\"converter\":\"Information_converter__24eIN\",\"p\":\"Information_p__3eJ4A\"};","import React from 'react';\r\nimport s from './Information.module.css'\r\n\r\nconst Information = (props) => {\r\n\r\n    let change = (e) => {\r\n        const etv = e.target.value\r\n        if (!isFinite(etv) || etv.substr(-1) === ' ') return\r\n        props.setCurrencyInput(etv, props.currencyResult)\r\n    }\r\n\r\n    let select = (e) => {\r\n        const etv = e.target.value\r\n        props.setCurrencySelected(etv)\r\n        props.request(etv)\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <p className={s.title}>{props.info.name}</p>\r\n            <img src={props.info.image} alt=\"\" className={s.image}/>\r\n            <div><a href={props.info.links}>{props.info.links}</a></div>\r\n            <div>Дата создания {props.info.genesis_date}</div>\r\n\r\n            <div className={s.converter}><p className={s.p}>{props.info.symbol}</p>\r\n                <input type=\"text\" className={s.input} onChange={change} value={props.currencyInput} />\r\n                <div className={s.input}>{props.currencyIR}</div>\r\n                <select className={s.select} onChange={select}>\r\n                    {props.currencyConverter.map((u, index) =>\r\n                        u === 'usd' ? <option selected='selected' key={index}>{u}</option> : <option key={index}>{u}</option>\r\n                    )}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Information","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {compose} from \"redux\";\r\nimport Information from \"./Information\";\r\nimport {getCurrencyConverter, getInformation, getIsFetching, getCurrencyResult} from \"../redux/exchanges-selectors\";\r\nimport {requestInformation, requestResult, setCurrencyInput, setCurrencySelected} from \"../redux/information-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport s from './Information.module.css'\r\n\r\nclass InformationContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        const {currencySelected} = this.props\r\n        this.props.getInformation(id)\r\n        this.props.getCurrencyConverter()\r\n        this.props.getCurrencyResult(id, currencySelected, this.props.currencyInput)\r\n    }\r\n\r\n    onPageChanged = (selected) => {\r\n        this.props.getCurrencyResult(this.props.match.params.id, selected, this.props.currencyInput)\r\n    }\r\n\r\n    render() {\r\n\r\n        return this.props.isFetching ? <div className={s.preloader}>Загрузка</div> :\r\n                <Information\r\n                    info={this.props.information}\r\n                             currencyConverter={this.props.currency}\r\n                             currencyInput={this.props.currencyInput}\r\n                             setCurrencyInput={this.props.setCurrencyInput}\r\n                             currencyResult={this.props.currencyResult}\r\n                             setCurrencySelected={this.props.setCurrencySelected}\r\n                             request={this.onPageChanged}\r\n                                currencyIR={this.props.currencyIR}\r\n                />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        information: getInformation(state),\r\n        isFetching: getIsFetching(state),\r\n        currency: getCurrencyConverter(state),\r\n        currencyInput: state.informationPage.currencyInput,\r\n        currencyIR: state.informationPage.currencyIR,\r\n        currencySelected: state.informationPage.currencySelected,\r\n        currencyResult: getCurrencyResult(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getInformation: requestInformation,\r\n        getCurrencyConverter: requestInformation,\r\n        setCurrencyInput,\r\n        setCurrencySelected,\r\n        getCurrencyResult: requestResult\r\n    })) (withRouter(InformationContainer))"],"sourceRoot":""}